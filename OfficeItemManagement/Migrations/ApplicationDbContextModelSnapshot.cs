// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficeItemManagement.Data;

namespace OfficeItemManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2");

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Export", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InitTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InitiatorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InitiatorId");

                    b.HasIndex("ItemId");

                    b.ToTable("Export");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Import", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Import");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Specification")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.ProductionRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductionRegion");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Sex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "管理员",
                            Password = "DEhBC6zdDy5YGvLmxgsjoMV3JTRVpYSgTqkEijhRjBhV5fuT",
                            Sex = 0,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Export", b =>
                {
                    b.HasOne("OfficeItemManagement.Data.Model.User", "Initiator")
                        .WithMany()
                        .HasForeignKey("InitiatorId");

                    b.HasOne("OfficeItemManagement.Data.Model.Item", null)
                        .WithMany("ExportRecords")
                        .HasForeignKey("ItemId");

                    b.Navigation("Initiator");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Import", b =>
                {
                    b.HasOne("OfficeItemManagement.Data.Model.Item", "Item")
                        .WithMany("ImportRecords")
                        .HasForeignKey("ItemId");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Item", b =>
                {
                    b.HasOne("OfficeItemManagement.Data.Model.ProductionRegion", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.HasOne("OfficeItemManagement.Data.Model.ItemType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Region");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("OfficeItemManagement.Data.Model.Item", b =>
                {
                    b.Navigation("ExportRecords");

                    b.Navigation("ImportRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
